org: acrboleda
app: zemoga-serverless-portfolio-web-app
service: backend
frameworkVersion: '2'

custom:
  usersTableName: 'users-table-${sls:stage}'
  tweetsTableName: 'tweets-table-${sls:stage}'
  dotenv:
    path: './config/.env.${sls:stage}'
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  bundle:
    packager: yarn

package:
  patterns:
    - 'package.json'
    - 'yarn.lock'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ TweetsTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    TWEETS_TABLE: ${self:custom.tweetsTableName}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: TWITTER_HANDLE
            AttributeType: S
        KeySchema:
          - AttributeName: TWITTER_HANDLE
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.usersTableName}
    TweetsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: TWITTER_HANDLE
            AttributeType: S
        KeySchema:
          - AttributeName: TWITTER_HANDLE
            KeyType: HASH
          - AttributeName: ID
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tweetsTableName}

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline